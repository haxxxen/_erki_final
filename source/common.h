#ifndef _COMMON_H_
#define _COMMON_H_

#include <assert.h>
#include <inttypes.h>
#include <errno.h>
#include <stdarg.h>
#include <stdint.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

#define COUNT_OF(x)						(sizeof(x) / sizeof((x)[0]))

#define KERNEL_BASE						0x8000000000000000ULL
#define KERNEL_ADDRESS(x)				(KERNEL_BASE | (uint32_t)(x))
#define SYSCALL_OPD_PTR_OFFSET(n)		(SYSCALL_TABLE_OFFSET + (n) * sizeof(uint64_t))
#define SYSCALL_OPD_OFFSET(n)			lv2_peek64(SYSCALL_OPD_PTR_OFFSET(n))
#define SYSCALL_CODE_OFFSET(n)			lv2_peek64(SYSCALL_OPD_OFFSET(n))

#define EID_ROOT_KEY_SIZE				0x30

#ifdef _DEBUG
	#define debug_printf(format, ...)	console_printf(format, #__VA_ARGS__)
#else
	#define debug_printf(format, ...)	while (0) {}
#endif

/* Firmware specific defines */

//3.55
//CEX
#define TOC_OFFSET_355					KERNEL_ADDRESS(0x330540)
#define SYSCALL_TABLE_OFFSET_355		KERNEL_ADDRESS(0x346570)
//DEX
#define TOC_OFFSET_355D					KERNEL_ADDRESS(0x34AC80)
#define SYSCALL_TABLE_OFFSET_355D		KERNEL_ADDRESS(0x361578)
//4.21
//CEX
#define TOC_OFFSET_421					KERNEL_ADDRESS(0x346390)
#define SYSCALL_TABLE_OFFSET_421		KERNEL_ADDRESS(0x35BCA8)
//DEH
#define TOC_OFFSET_421E					KERNEL_ADDRESS(0x3937D0)
#define SYSCALL_TABLE_OFFSET_421E		KERNEL_ADDRESS(0x3AA5C0)
//DEX
#define TOC_OFFSET_421D					KERNEL_ADDRESS(0x363E80)
#define SYSCALL_TABLE_OFFSET_421D		KERNEL_ADDRESS(0x37A1B0)
//4.30
//CEX
#define TOC_OFFSET_430					KERNEL_ADDRESS(0x348200)
#define SYSCALL_TABLE_OFFSET_430		KERNEL_ADDRESS(0x35DBE0)
//DEX
#define TOC_OFFSET_430D					KERNEL_ADDRESS(0x365CA0)
#define SYSCALL_TABLE_OFFSET_430D		KERNEL_ADDRESS(0x37C068)
//4.46
//CEX
#define TOC_OFFSET_446					KERNEL_ADDRESS(0x348DF0)
#define SYSCALL_TABLE_OFFSET_446		KERNEL_ADDRESS(0x35E860)
//DEX
#define TOC_OFFSET_446D					KERNEL_ADDRESS(0x366BD0)
#define SYSCALL_TABLE_OFFSET_446D		KERNEL_ADDRESS(0x37CFE8)
//4.65
//CEX
#define TOC_OFFSET_465					KERNEL_ADDRESS(0x34F960)
#define SYSCALL_TABLE_OFFSET_465		KERNEL_ADDRESS(0x363A18)
//DEX
#define TOC_OFFSET_465D					KERNEL_ADDRESS(0x375510)
#define SYSCALL_TABLE_OFFSET_465D		KERNEL_ADDRESS(0x38A120)
//4.70
//CEX
#define TOC_OFFSET_470					KERNEL_ADDRESS(0x34FB10)
#define SYSCALL_TABLE_OFFSET_470		KERNEL_ADDRESS(0x363B60)
//DEX
#define TOC_OFFSET_470D					KERNEL_ADDRESS(0x375850)
#define SYSCALL_TABLE_OFFSET_470D		KERNEL_ADDRESS(0x38A368)
//4.75-4.78
//CEX
#define TOC_OFFSET_475					KERNEL_ADDRESS(0x34FBB0)
#define SYSCALL_TABLE_OFFSET_475		KERNEL_ADDRESS(0x363BE0)
//DEX
#define TOC_OFFSET_475D					KERNEL_ADDRESS(0x3758E0)
#define SYSCALL_TABLE_OFFSET_475D		KERNEL_ADDRESS(0x38A3E8)

#define PAYLOAD_OFFSET					KERNEL_ADDRESS(0x7F0000)
#define PAYLOAD_OPD_OFFSET				KERNEL_ADDRESS(0x1830)

#define HTAB_BASE						KERNEL_ADDRESS(0xF000000)
#define HTAB_SIZE						0x40000ULL
#define HTAB_ENTRY_SIZE					0x10

#define SYSCALL_LV2_PEEK				6
#define SYSCALL_LV2_POKE				7
#define SYSCALL_LV1_PEEK				8
#define SYSCALL_LV1_POKE				9
#define SYSCALL_RUN_PAYLOAD				32
#define SYSCALL_HVC_REDIRECTOR			811
#define SYSCALL_POKE_WITH_CACHE			813
#define SYSCALL_SM_SHUTDOWN				379
#define SYSCALL_RING_BUZZER				392
#define SYSCALL_CONSOLE_WRITE			398

extern uint64_t SYSCALL_TABLE_OFFSET;
extern uint64_t TOC_OFFSET;

#endif
